Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    Index
    Enum
    i64
    struct
    namespace
    import
    include
    void
    RangeIndex
    Identifier
    response
    i32
    persistent

Grammar

Rule 0     S' -> service
Rule 1     assignment -> identifier ASSIGN intconstant
Rule 2     type -> identifier
Rule 3     type -> Boolean
Rule 4     type -> Double
Rule 5     type -> String
Rule 6     type -> Object
Rule 7     type -> Set LT type GT
Rule 8     type -> List LT type GT
Rule 9     type -> Map LT type COMMA type GT
Rule 10    declaration -> intconstant SEMICOLON type identifier
Rule 11    declaration_list -> declaration
Rule 12    declaration_list -> declaration_list COMMA declaration
Rule 13    function_basic -> identifier identifier LPAREN RPAREN COLON
Rule 14    function_basic -> identifier identifier LPAREN declaration_list RPAREN COLON
Rule 15    function -> Post function_basic
Rule 16    function -> function_basic
Rule 17    function_list -> function_list function
Rule 18    function_list -> function
Rule 19    service -> Service identifier LCURLY function_list RCURLY

Terminals, with rules where they appear

ASSIGN               : 1
Boolean              : 3
COLON                : 13 14
COMMA                : 9 12
Double               : 4
Enum                 : 
GT                   : 7 8 9
Identifier           : 
Index                : 
LCURLY               : 19
LPAREN               : 13 14
LT                   : 7 8 9
List                 : 8
Map                  : 9
Object               : 6
Post                 : 15
RCURLY               : 19
RPAREN               : 13 14
RangeIndex           : 
SEMICOLON            : 10
Service              : 19
Set                  : 7
String               : 5
error                : 
i32                  : 
i64                  : 
identifier           : 1 2 10 13 13 14 14 19
import               : 
include              : 
intconstant          : 1 10
namespace            : 
persistent           : 
response             : 
struct               : 
void                 : 

Nonterminals, with rules where they appear

assignment           : 
declaration          : 11 12
declaration_list     : 12 14
function             : 17 18
function_basic       : 15 16
function_list        : 17 19
service              : 0
type                 : 7 8 9 9 10

Parsing method: LALR

state 0

    (0) S' -> . service
    (19) service -> . Service identifier LCURLY function_list RCURLY

    Service         shift and go to state 2

    service                        shift and go to state 1

state 1

    (0) S' -> service .



state 2

    (19) service -> Service . identifier LCURLY function_list RCURLY

    identifier      shift and go to state 3


state 3

    (19) service -> Service identifier . LCURLY function_list RCURLY

    LCURLY          shift and go to state 4


state 4

    (19) service -> Service identifier LCURLY . function_list RCURLY
    (17) function_list -> . function_list function
    (18) function_list -> . function
    (15) function -> . Post function_basic
    (16) function -> . function_basic
    (13) function_basic -> . identifier identifier LPAREN RPAREN COLON
    (14) function_basic -> . identifier identifier LPAREN declaration_list RPAREN COLON

    Post            shift and go to state 8
    identifier      shift and go to state 9

    function                       shift and go to state 5
    function_basic                 shift and go to state 7
    function_list                  shift and go to state 6

state 5

    (18) function_list -> function .

    RCURLY          reduce using rule 18 (function_list -> function .)
    Post            reduce using rule 18 (function_list -> function .)
    identifier      reduce using rule 18 (function_list -> function .)


state 6

    (19) service -> Service identifier LCURLY function_list . RCURLY
    (17) function_list -> function_list . function
    (15) function -> . Post function_basic
    (16) function -> . function_basic
    (13) function_basic -> . identifier identifier LPAREN RPAREN COLON
    (14) function_basic -> . identifier identifier LPAREN declaration_list RPAREN COLON

    RCURLY          shift and go to state 11
    Post            shift and go to state 8
    identifier      shift and go to state 9

    function                       shift and go to state 10
    function_basic                 shift and go to state 7

state 7

    (16) function -> function_basic .

    RCURLY          reduce using rule 16 (function -> function_basic .)
    Post            reduce using rule 16 (function -> function_basic .)
    identifier      reduce using rule 16 (function -> function_basic .)


state 8

    (15) function -> Post . function_basic
    (13) function_basic -> . identifier identifier LPAREN RPAREN COLON
    (14) function_basic -> . identifier identifier LPAREN declaration_list RPAREN COLON

    identifier      shift and go to state 9

    function_basic                 shift and go to state 12

state 9

    (13) function_basic -> identifier . identifier LPAREN RPAREN COLON
    (14) function_basic -> identifier . identifier LPAREN declaration_list RPAREN COLON

    identifier      shift and go to state 13


state 10

    (17) function_list -> function_list function .

    RCURLY          reduce using rule 17 (function_list -> function_list function .)
    Post            reduce using rule 17 (function_list -> function_list function .)
    identifier      reduce using rule 17 (function_list -> function_list function .)


state 11

    (19) service -> Service identifier LCURLY function_list RCURLY .

    $end            reduce using rule 19 (service -> Service identifier LCURLY function_list RCURLY .)


state 12

    (15) function -> Post function_basic .

    RCURLY          reduce using rule 15 (function -> Post function_basic .)
    Post            reduce using rule 15 (function -> Post function_basic .)
    identifier      reduce using rule 15 (function -> Post function_basic .)


state 13

    (13) function_basic -> identifier identifier . LPAREN RPAREN COLON
    (14) function_basic -> identifier identifier . LPAREN declaration_list RPAREN COLON

    LPAREN          shift and go to state 14


state 14

    (13) function_basic -> identifier identifier LPAREN . RPAREN COLON
    (14) function_basic -> identifier identifier LPAREN . declaration_list RPAREN COLON
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration_list COMMA declaration
    (10) declaration -> . intconstant SEMICOLON type identifier

    RPAREN          shift and go to state 15
    intconstant     shift and go to state 16

    declaration                    shift and go to state 18
    declaration_list               shift and go to state 17

state 15

    (13) function_basic -> identifier identifier LPAREN RPAREN . COLON

    COLON           shift and go to state 19


state 16

    (10) declaration -> intconstant . SEMICOLON type identifier

    SEMICOLON       shift and go to state 20


state 17

    (14) function_basic -> identifier identifier LPAREN declaration_list . RPAREN COLON
    (12) declaration_list -> declaration_list . COMMA declaration

    RPAREN          shift and go to state 21
    COMMA           shift and go to state 22


state 18

    (11) declaration_list -> declaration .

    RPAREN          reduce using rule 11 (declaration_list -> declaration .)
    COMMA           reduce using rule 11 (declaration_list -> declaration .)


state 19

    (13) function_basic -> identifier identifier LPAREN RPAREN COLON .

    RCURLY          reduce using rule 13 (function_basic -> identifier identifier LPAREN RPAREN COLON .)
    Post            reduce using rule 13 (function_basic -> identifier identifier LPAREN RPAREN COLON .)
    identifier      reduce using rule 13 (function_basic -> identifier identifier LPAREN RPAREN COLON .)


state 20

    (10) declaration -> intconstant SEMICOLON . type identifier
    (2) type -> . identifier
    (3) type -> . Boolean
    (4) type -> . Double
    (5) type -> . String
    (6) type -> . Object
    (7) type -> . Set LT type GT
    (8) type -> . List LT type GT
    (9) type -> . Map LT type COMMA type GT

    identifier      shift and go to state 30
    Boolean         shift and go to state 29
    Double          shift and go to state 26
    String          shift and go to state 25
    Object          shift and go to state 27
    Set             shift and go to state 24
    List            shift and go to state 28
    Map             shift and go to state 23

    type                           shift and go to state 31

state 21

    (14) function_basic -> identifier identifier LPAREN declaration_list RPAREN . COLON

    COLON           shift and go to state 32


state 22

    (12) declaration_list -> declaration_list COMMA . declaration
    (10) declaration -> . intconstant SEMICOLON type identifier

    intconstant     shift and go to state 16

    declaration                    shift and go to state 33

state 23

    (9) type -> Map . LT type COMMA type GT

    LT              shift and go to state 34


state 24

    (7) type -> Set . LT type GT

    LT              shift and go to state 35


state 25

    (5) type -> String .

    GT              reduce using rule 5 (type -> String .)
    COMMA           reduce using rule 5 (type -> String .)
    identifier      reduce using rule 5 (type -> String .)


state 26

    (4) type -> Double .

    GT              reduce using rule 4 (type -> Double .)
    COMMA           reduce using rule 4 (type -> Double .)
    identifier      reduce using rule 4 (type -> Double .)


state 27

    (6) type -> Object .

    GT              reduce using rule 6 (type -> Object .)
    COMMA           reduce using rule 6 (type -> Object .)
    identifier      reduce using rule 6 (type -> Object .)


state 28

    (8) type -> List . LT type GT

    LT              shift and go to state 36


state 29

    (3) type -> Boolean .

    GT              reduce using rule 3 (type -> Boolean .)
    COMMA           reduce using rule 3 (type -> Boolean .)
    identifier      reduce using rule 3 (type -> Boolean .)


state 30

    (2) type -> identifier .

    GT              reduce using rule 2 (type -> identifier .)
    COMMA           reduce using rule 2 (type -> identifier .)
    identifier      reduce using rule 2 (type -> identifier .)


state 31

    (10) declaration -> intconstant SEMICOLON type . identifier

    identifier      shift and go to state 37


state 32

    (14) function_basic -> identifier identifier LPAREN declaration_list RPAREN COLON .

    RCURLY          reduce using rule 14 (function_basic -> identifier identifier LPAREN declaration_list RPAREN COLON .)
    Post            reduce using rule 14 (function_basic -> identifier identifier LPAREN declaration_list RPAREN COLON .)
    identifier      reduce using rule 14 (function_basic -> identifier identifier LPAREN declaration_list RPAREN COLON .)


state 33

    (12) declaration_list -> declaration_list COMMA declaration .

    RPAREN          reduce using rule 12 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 12 (declaration_list -> declaration_list COMMA declaration .)


state 34

    (9) type -> Map LT . type COMMA type GT
    (2) type -> . identifier
    (3) type -> . Boolean
    (4) type -> . Double
    (5) type -> . String
    (6) type -> . Object
    (7) type -> . Set LT type GT
    (8) type -> . List LT type GT
    (9) type -> . Map LT type COMMA type GT

    identifier      shift and go to state 30
    Boolean         shift and go to state 29
    Double          shift and go to state 26
    String          shift and go to state 25
    Object          shift and go to state 27
    Set             shift and go to state 24
    List            shift and go to state 28
    Map             shift and go to state 23

    type                           shift and go to state 38

state 35

    (7) type -> Set LT . type GT
    (2) type -> . identifier
    (3) type -> . Boolean
    (4) type -> . Double
    (5) type -> . String
    (6) type -> . Object
    (7) type -> . Set LT type GT
    (8) type -> . List LT type GT
    (9) type -> . Map LT type COMMA type GT

    identifier      shift and go to state 30
    Boolean         shift and go to state 29
    Double          shift and go to state 26
    String          shift and go to state 25
    Object          shift and go to state 27
    Set             shift and go to state 24
    List            shift and go to state 28
    Map             shift and go to state 23

    type                           shift and go to state 39

state 36

    (8) type -> List LT . type GT
    (2) type -> . identifier
    (3) type -> . Boolean
    (4) type -> . Double
    (5) type -> . String
    (6) type -> . Object
    (7) type -> . Set LT type GT
    (8) type -> . List LT type GT
    (9) type -> . Map LT type COMMA type GT

    identifier      shift and go to state 30
    Boolean         shift and go to state 29
    Double          shift and go to state 26
    String          shift and go to state 25
    Object          shift and go to state 27
    Set             shift and go to state 24
    List            shift and go to state 28
    Map             shift and go to state 23

    type                           shift and go to state 40

state 37

    (10) declaration -> intconstant SEMICOLON type identifier .

    RPAREN          reduce using rule 10 (declaration -> intconstant SEMICOLON type identifier .)
    COMMA           reduce using rule 10 (declaration -> intconstant SEMICOLON type identifier .)


state 38

    (9) type -> Map LT type . COMMA type GT

    COMMA           shift and go to state 41


state 39

    (7) type -> Set LT type . GT

    GT              shift and go to state 42


state 40

    (8) type -> List LT type . GT

    GT              shift and go to state 43


state 41

    (9) type -> Map LT type COMMA . type GT
    (2) type -> . identifier
    (3) type -> . Boolean
    (4) type -> . Double
    (5) type -> . String
    (6) type -> . Object
    (7) type -> . Set LT type GT
    (8) type -> . List LT type GT
    (9) type -> . Map LT type COMMA type GT

    identifier      shift and go to state 30
    Boolean         shift and go to state 29
    Double          shift and go to state 26
    String          shift and go to state 25
    Object          shift and go to state 27
    Set             shift and go to state 24
    List            shift and go to state 28
    Map             shift and go to state 23

    type                           shift and go to state 44

state 42

    (7) type -> Set LT type GT .

    GT              reduce using rule 7 (type -> Set LT type GT .)
    COMMA           reduce using rule 7 (type -> Set LT type GT .)
    identifier      reduce using rule 7 (type -> Set LT type GT .)


state 43

    (8) type -> List LT type GT .

    GT              reduce using rule 8 (type -> List LT type GT .)
    COMMA           reduce using rule 8 (type -> List LT type GT .)
    identifier      reduce using rule 8 (type -> List LT type GT .)


state 44

    (9) type -> Map LT type COMMA type . GT

    GT              shift and go to state 45


state 45

    (9) type -> Map LT type COMMA type GT .

    GT              reduce using rule 9 (type -> Map LT type COMMA type GT .)
    COMMA           reduce using rule 9 (type -> Map LT type COMMA type GT .)
    identifier      reduce using rule 9 (type -> Map LT type COMMA type GT .)

